{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\n'use strict';\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst button = document.querySelector('[data-start]');\nconst timer = document.querySelector('.timer');\nconst input = document.querySelector('#datetime-picker');\nconst valueDays = document.querySelector('[data-days]');\nconst valueHours = document.querySelector('[data-hours]');\nconst valueMinutes = document.querySelector('[data-minutes]');\nconst valueSeconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = new Date('2020-01-24');\nlet diff = 0;\nlet intervalId;\n\nbutton.disabled = true;\n\nfunction onButtonClick() {\n  diff = userSelectedDate.getTime() - new Date().getTime();\n  if (diff >= 0) {\n    button.disabled = false;\n    intervalId = setInterval(() => {\n      button.disabled = true;\n      input.disabled = true;\n      diff -= 1000;\n      tickTack(convertMs(diff));\n      if (diff < 1000) {\n        clearInterval(intervalId);\n      }\n    }, 1000);\n  }\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        messageColor: '#FFFFFF',\n        backgroundColor: '#B51B1B',\n        position: 'topRight',\n      });\n    } else {\n      button.disabled = false;\n    }\n  },\n \n};\n\nflatpickr(input, options);\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nfunction tickTack({ days, hours, minutes, seconds }) {\n  valueDays.textContent = `${addLeadingZero(days)}`;\n  valueHours.textContent = `${addLeadingZero(hours)}`;\n  valueMinutes.textContent = `${addLeadingZero(minutes)}`;\n  valueSeconds.textContent = `${addLeadingZero(seconds)}`;\n}\n\nfunction addLeadingZero(num) {\n  return num.toString().padStart(2, '0');\n}\n\n\nbutton.addEventListener('click', onButtonClick);\n\n"],"names":["button","input","valueDays","valueHours","valueMinutes","valueSeconds","userSelectedDate","diff","intervalId","onButtonClick","tickTack","convertMs","options","selectedDates","iziToast","flatpickr","ms","days","hours","minutes","seconds","addLeadingZero","num"],"mappings":"2GAQA,MAAMA,EAAS,SAAS,cAAc,cAAc,EACtC,SAAS,cAAc,QAAQ,EAC7C,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAAmB,IAAI,KAAK,YAAY,EACxCC,EAAO,EACPC,EAEJR,EAAO,SAAW,GAElB,SAASS,GAAgB,CACvBF,EAAOD,EAAiB,QAAO,EAAK,IAAI,KAAI,EAAG,UAC3CC,GAAQ,IACVP,EAAO,SAAW,GAClBQ,EAAa,YAAY,IAAM,CAC7BR,EAAO,SAAW,GAClBC,EAAM,SAAW,GACjBM,GAAQ,IACRG,EAASC,EAAUJ,CAAI,CAAC,EACpBA,EAAO,KACT,cAAcC,CAAU,CAE3B,EAAE,GAAI,EAEX,CAEA,MAAMI,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBP,EAAmBO,EAAc,GAC7BP,EAAmB,KAAK,MAC1BQ,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,UACd,gBAAiB,UACjB,SAAU,UAClB,CAAO,EAEDd,EAAO,SAAW,EAErB,CAEH,EAEAe,EAAUd,EAAOW,CAAO,EAExB,MAAMD,EAAYK,GAAM,CAMtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEA,SAASV,EAAS,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACnDlB,EAAU,YAAc,GAAGmB,EAAeJ,CAAI,IAC9Cd,EAAW,YAAc,GAAGkB,EAAeH,CAAK,IAChDd,EAAa,YAAc,GAAGiB,EAAeF,CAAO,IACpDd,EAAa,YAAc,GAAGgB,EAAeD,CAAO,GACtD,CAEA,SAASC,EAAeC,EAAK,CAC3B,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACvC,CAGAtB,EAAO,iBAAiB,QAASS,CAAa"}