{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["'use strict'\n\n\nimport iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// const btnCreate = document.querySelector('button');\n\n// const form = document.querySelector('.form')\n// const radioButtons = form.querySelectorAll('input[type=\"radio\"][name=\"state\"]');\n\n// form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(e) {\n//   e.preventDefault();\n//   const inputDelay = document.querySelector('input[name=\"delay\"]');\n//   const inputDelayValue = parseInt(inputDelay.value);\n//   const obj = {\n//     value: '',\n//     delay: inputDelayValue,\n//     shouldResolve: form.querySelector('input[name=\"state\"]:checked').value,\n// };\n\n// makePromise(obj)\n//   .then(value =>\n//     iziToast.success({\n//         title: '',\n//         message: value,\n//     })) \n//   .catch(error =>\n//     iziToast.error({\n//     title: '',\n//     message: error,\n//     }));\n// }\n\n\n// const makePromise = ({ value, delay, shouldResolve }) => {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve === 'fulfilled') {\n//         value = `✅ Fulfilled promise in ${delay}ms`;\n//         resolve(value);\n//       } else {\n//         value = `❌ Rejected promise in ${delay}ms`;\n//         reject(value);\n//       }\n//     }, delay);\n//   });\n// };\n\nconst btnCreate = document.querySelector('button');\nconst form = document.querySelector('.form');\nconst radioButtons = form.querySelectorAll('input[type=\"radio\"][name=\"state\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const inputDelay = document.querySelector('input[name=\"delay\"]');\n  const inputDelayValue = parseInt(inputDelay.value);\n\n  const obj = {\n    value: '',\n    delay: inputDelayValue,\n    shouldResolve: document.querySelector('input[type=\"radio\"][name=\"state\"]:checked').value,\n  };\n\n  makePromise(obj)\n    .then((value) => {\n      console.log('Promise resolved:', value);\n      iziToast.success({\n        title: '',\n        message: value,\n      });\n    })\n    .catch((error) => {\n      console.error('Promise rejected:', error);\n      iziToast.error({\n        title: '',\n        message: error,\n      });\n    });\n}\n\nconst makePromise = ({ value, delay, shouldResolve }) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve === 'fulfilled') {\n        value = `✅ Fulfilled promise in ${delay}ms`;\n        resolve(value);\n      }\n        value = `❌ Rejected promise in ${delay}ms`;\n        reject(value);\n      \n    }, delay);\n  });\n};"],"names":["form","onFormSubmit","e","inputDelay","obj","makePromise","value","iziToast","error","delay","shouldResolve","resolve","reject"],"mappings":"oGAoDkB,SAAS,cAAc,QAAQ,EACjD,MAAMA,EAAO,SAAS,cAAc,OAAO,EACtBA,EAAK,iBAAiB,mCAAmC,EAE9EA,EAAK,iBAAiB,SAAUC,CAAY,EAE5C,SAASA,EAAaC,EAAG,CACvBA,EAAE,eAAc,EAChB,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EAGzDC,EAAM,CACV,MAAO,GACP,MAJsB,SAASD,EAAW,KAAK,EAK/C,cAAe,SAAS,cAAc,2CAA2C,EAAE,KACvF,EAEEE,EAAYD,CAAG,EACZ,KAAME,GAAU,CACf,QAAQ,IAAI,oBAAqBA,CAAK,EACtCC,EAAS,QAAQ,CACf,MAAO,GACP,QAASD,CACjB,CAAO,CACP,CAAK,EACA,MAAOE,GAAU,CAChB,QAAQ,MAAM,oBAAqBA,CAAK,EACxCD,EAAS,MAAM,CACb,MAAO,GACP,QAASC,CACjB,CAAO,CACP,CAAK,CACL,CAEA,MAAMH,EAAc,CAAC,CAAE,MAAAC,EAAO,MAAAG,EAAO,cAAAC,CAAa,IACzC,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXF,IAAkB,cACpBJ,EAAQ,0BAA0BG,MAClCE,EAAQL,CAAK,GAEbA,EAAQ,yBAAyBG,MACjCG,EAAON,CAAK,CAEf,EAAEG,CAAK,CACZ,CAAG"}